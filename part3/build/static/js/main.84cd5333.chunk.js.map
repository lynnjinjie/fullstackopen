{"version":3,"sources":["components/filter.js","components/personForm.js","components/persons.js","components/Notification.js","services/person.js","App.js","index.js"],"names":["Filter","handleFilterName","onChange","PersonForm","addPerson","newName","newNumber","handleChangeNewName","handleChangeNewNumber","handleAdd","onSubmit","value","onClick","Person","persons","handleDelItem","map","item","i","name","number","Notification","message","type","className","baseUrl","getAll","axios","get","then","res","data","App","useState","setPersons","setNewName","setNewNumber","setMessage","msgType","setMsgType","useEffect","console","log","event","filterName","target","filterPersons","filter","toLocaleLowerCase","includes","preventDefault","findIndex","alert","e","isHavePeron","find","window","confirm","id","newObj","put","p","catch","error","setTimeout","newPerson","length","post","concat","response","delete","v","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84cd5333.chunk.js","sourcesContent":["const Filter = ({ handleFilterName }) => {\n  return (\n    <div>\n      filter shown with <input onChange={handleFilterName} />\n    </div>\n  )\n}\n\nexport default Filter\n","const PersonForm = ({\n  addPerson,\n  newName,\n  newNumber,\n  handleChangeNewName,\n  handleChangeNewNumber,\n  handleAdd,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleChangeNewName} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleChangeNewNumber} />\n      </div>\n      <div>\n        <button onClick={handleAdd}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","const Person = ({ persons, handleDelItem }) => {\n  return (\n    <div>\n      {persons.map((item, i) => (\n        <div key={i}>\n          {item.name} {item.number}\n          <button\n            onClick={() => {\n              handleDelItem(item)\n            }}\n          >\n            delete\n          </button>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Person\n","const Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n  return <div className={type}>{message}</div>\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((res) => res.data)\n}\n\nconst create = (data) => {\n  const request = axios.post(baseUrl, data)\n  return request.then((res) => res.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((res) => res)\n}\n\nconst update = (id, newObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObj)\n  return request.then((res) => res.data)\n}\nexport { getAll, create, remove, update }\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport Persons from './components/persons'\nimport Notification from './components/Notification'\nimport { getAll, create, remove, update } from './services/person'\nimport './index.css'\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [message, setMessage] = useState(null)\n  const [msgType, setMsgType] = useState('success')\n  useEffect(() => {\n    console.log(getAll())\n    getAll().then((data) => {\n      setPersons(data)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const isHavePeron = persons.findIndex((item) => item.name === newName)\n    if (isHavePeron !== -1) {\n      alert(`${newName} is already added to phonebook`)\n      return\n    }\n\n    // const person = {\n    //   name: newName,\n    //   number: newNumber,\n    //   id: persons[persons.length - 1].id,\n    // }\n    // setPersons(persons.concat(person))\n    // setNewName('')\n    // setNewNumber('')\n  }\n  const handleChangeNewName = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleChangeNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterName = (event) => {\n    const filterName = event.target.value\n    const filterPersons = persons.filter((item) => {\n      return item.name\n        .toLocaleLowerCase()\n        .includes(filterName.toLocaleLowerCase())\n    })\n    setPersons(filterPersons)\n  }\n  // 新增\n  const handleAdd = (e) => {\n    e.preventDefault()\n    const isHavePeron = persons.find((item) => item.name === newName)\n    if (isHavePeron) {\n      if (\n        window.confirm(\n          `${isHavePeron.name} is already added to phonebook, replace the old number with a new one ?`\n        )\n      ) {\n        update(isHavePeron.id, {\n          name: newName,\n          number: newNumber,\n        })\n          .then((data) => {\n            setPersons(persons.map((p) => (p.id !== data.id ? p : data)))\n          })\n          .catch((error) => {\n            setMessage(\n              `Information of ${isHavePeron.name} has already been removed from server`\n            )\n            setMsgType('fail')\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          })\n      }\n      return\n    }\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n      id: persons[persons.length - 1].id + 1,\n    }\n    create(newPerson).then((data) => {\n      setPersons(persons.concat(data))\n      setMessage(`Added ${data.name}`)\n      setMsgType('success')\n      setTimeout(() => {\n        setMessage(null)\n      }, 2000)\n    }).catch(error => {\n      setMessage(error.response.data)\n      setMsgType('fail')\n    })\n  }\n  const handleDelItem = (item) => {\n    if (window.confirm(`Delete ${item.name} ?`)) {\n      remove(item.id).then((data) => {\n        setPersons(persons.filter((v) => v.id !== item.id))\n      })\n    }\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={msgType}></Notification>\n      <Filter handleFilterName={handleFilterName} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleChangeNewName={handleChangeNewName}\n        handleChangeNewNumber={handleChangeNewNumber}\n        handleAdd={handleAdd}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} handleDelItem={handleDelItem}></Persons>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}